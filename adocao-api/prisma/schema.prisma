generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               String             @id @default(uuid())
  nome             String
  nomeDeUsuario    String             @unique
  descricao        String?
  email            String             @unique
  senha            String
  criacao          DateTime
  estado           STATUS
  recuperacoes     Recuperacao[]
  posts            Post[]
  animaisFav       UsuarioAnimalFav[]
  comentariosDicas ComentarioDica[]

  @@map("usuarios")
}

model Animal {
  id          Int                @id @default(autoincrement())
  imgURL      String
  nome        String
  usuariosFav UsuarioAnimalFav[]

  @@map("animais")
}

model UsuarioAnimalFav {
  animal    Animal  @relation(fields: [animalId], references: [id])
  animalId  Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String

  @@id([animalId, usuarioId])
  @@map("UsuarioAnimalFavoritados")
}

model Recuperacao {
  id        String   @id @default(uuid())
  usuarioId String
  token     String?
  criacao   DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])

  @@map("recuperacoes")
}

enum STATUS {
  ATIVO
  ANALISE
  SUSPENSO
  BANIDO
}

model Post {
  postId    Int       @id @default(autoincrement())
  usuarios  Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId String
  createAt  DateTime? @default(now())
  uptadeAt  DateTime? @updatedAt
  descricao String
  imageURL  String

  @@map("posts")
}

model Parceiro {
  id        Int    @id @default(autoincrement())
  imageURL  String
  nome      String
  cnpj      String
  descricao String
  contato   String
  posicaoX  Float
  posicaoY  Float
  pagina    String

  @@map("parceiros")
}

model Dica {
  id          Int              @id @default(autoincrement())
  imgURL      String?
  titulo      String
  autor       String
  criacao     DateTime
  texto       String           @db.LongText
  comentarios ComentarioDica[]
  categoria   CategoriaEnum

  @@map("dicas")
}

enum CategoriaEnum {
  CUIDADO
  NUTRICAO
  TREINAMENTO
  EXERCICIO
}

model ComentarioDica {
  id        Int     @id @default(autoincrement())
  texto     String
  dica      Dica    @relation(fields: [dicaId], references: [id])
  dicaId    Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String

  @@map("ComtentariosDica")
}
